[{"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\index.tsx":"1","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\App.tsx":"2","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\network.ts":"3","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\screens\\login\\loginScreen.tsx":"4","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\components\\button\\button.tsx":"5","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\redux.ts":"6","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\actions.ts":"7","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\screens\\lobby\\lobbyScreen.tsx":"8","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\components\\playerDisplay\\playerDisplay.tsx":"9","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\cards.ts":"10","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\screens\\game\\gameScreen.tsx":"11","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\components\\dice\\dice.tsx":"12","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\audioManager.ts":"13"},{"size":392,"mtime":1608479047502,"results":"14","hashOfConfig":"15"},{"size":820,"mtime":1608582554121,"results":"16","hashOfConfig":"15"},{"size":2061,"mtime":1608916542708,"results":"17","hashOfConfig":"15"},{"size":1351,"mtime":1608479902603,"results":"18","hashOfConfig":"15"},{"size":527,"mtime":1608086961655,"results":"19","hashOfConfig":"15"},{"size":1621,"mtime":1608684762889,"results":"20","hashOfConfig":"15"},{"size":663,"mtime":1608683784319,"results":"21","hashOfConfig":"15"},{"size":1980,"mtime":1608582640929,"results":"22","hashOfConfig":"15"},{"size":1433,"mtime":1608509668453,"results":"23","hashOfConfig":"15"},{"size":835,"mtime":1608509650117,"results":"24","hashOfConfig":"15"},{"size":619,"mtime":1608679150058,"results":"25","hashOfConfig":"15"},{"size":744,"mtime":1608916667570,"results":"26","hashOfConfig":"15"},{"size":3154,"mtime":1608916406156,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zl3jja",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\index.tsx",[],["59","60"],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\App.tsx",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\network.ts",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\screens\\login\\loginScreen.tsx",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\components\\button\\button.tsx",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\redux.ts",["61"],"import { stat } from 'fs';\r\nimport { createStore } from 'redux';\r\nimport { ActionType, IAction } from './actions';\r\n\r\nexport enum NavState {\r\n    LOGIN,\r\n    LOBBY,\r\n    GAME,\r\n}\r\n\r\nexport interface IPlayer {\r\n    uid: number\r\n    username: string\r\n    characterIndex: number\r\n\r\n    hand: any[] // TODO\r\n}\r\n\r\nexport interface IState {\r\n    navState: NavState\r\n\r\n    uid: number\r\n    players: IPlayer[]\r\n    diceValue: number\r\n    rollToggle: boolean // Used to notify the dice for when it is rolled\r\n}\r\n\r\nconst initialState = {\r\n    navState: NavState.LOGIN,\r\n\r\n    uid: 0,\r\n    players: [],\r\n\r\n    diceValue: 1,\r\n    rollToggle: false\r\n} as IState\r\n\r\nconst reducer = (state: IState = initialState, action: IAction): IState => {\r\n    switch (action.type) {\r\n        case ActionType.JOIN_LOBBY:\r\n            state = {\r\n                ...state,\r\n                uid: action.payload,\r\n                navState: NavState.LOBBY,\r\n            }\r\n            break;\r\n        case ActionType.SET_PLAYERS:\r\n            state = {\r\n                ...state,\r\n                players: action.payload,\r\n            }\r\n            break;\r\n        case ActionType.START_GAME:\r\n            state = {\r\n                ...state,\r\n                navState: NavState.GAME,\r\n            }\r\n            break;\r\n        case ActionType.ROLL_DICE:\r\n            state = {\r\n                ...state,\r\n                diceValue: action.payload,\r\n                rollToggle: !state.rollToggle\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport const store = createStore(reducer);","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\actions.ts",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\screens\\lobby\\lobbyScreen.tsx",["62","63"],"import React from 'react';\r\nimport PlayerDisplay from '../../components/playerDisplay/playerDisplay';\r\nimport { IState, IPlayer, store } from '../../utils/redux';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../components/button/button';\r\n\r\nimport classes from './lobbyScreen.module.css';\r\nimport Network from '../../utils/network';\r\n\r\ninterface ILobbyState {\r\n\r\n}\r\n\r\ninterface ILobbyProps {\r\n\r\n}\r\n\r\nclass LobbyScreen extends React.Component<ILobbyProps, ILobbyState>{\r\n\r\n    constructor(props: ILobbyProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.lobbyContainer}>\r\n                <div className={classes.slots}>\r\n                    {this.getDisplays()}\r\n                    {this.getEmpties()}\r\n                </div>\r\n\r\n                {/* Display the play button if the player is the least reasently joined player */}\r\n                {Math.min(...store.getState().players.map((player: IPlayer) => player.uid)) == store.getState().uid ? <div className={classes.playButtonContainer}><Button clicked={() => Network.sendStartGameRequest()}>Play!</Button></div> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDisplays = (): JSX.Element[] => {\r\n        return store.getState().players.map((player: IPlayer, index: number) => {\r\n            return <PlayerDisplay\r\n                key={index}\r\n                uid={player.uid}\r\n                username={player.username}\r\n                characterIndex={player.characterIndex}\r\n            />\r\n        })\r\n    }\r\n\r\n    getEmpties = (): JSX.Element[] => {\r\n        let arr = Array(4 - store.getState().players.length).fill(0);\r\n        return arr.map((n: number, index: number) => <div key={index + store.getState().players.length} className={classes.empty}></div>)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n    return {\r\n        players: state.players\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(LobbyScreen);\r\n","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\components\\playerDisplay\\playerDisplay.tsx",["64"],"import React from 'react';\r\nimport { getCardURL, NUMBER_OF_PLAYER_CARDS } from '../../utils/cards';\r\nimport Network from '../../utils/network';\r\nimport { store } from '../../utils/redux';\r\nimport Button from '../button/button';\r\n\r\nimport classes from './playerDisplay.module.css'\r\n\r\ninterface IPlayerDisplayProps {\r\n    username: string\r\n    uid: number\r\n    characterIndex: number\r\n}\r\n\r\ninterface IPlayerDisplayState {\r\n\r\n}\r\n\r\nexport default class PlayerDisplay extends React.Component<IPlayerDisplayProps, IPlayerDisplayState> {\r\n\r\n    constructor(props: IPlayerDisplayProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.container}>\r\n                {this.props.username}\r\n                <img className={classes.playerCard} src={getCardURL(this.props.characterIndex)} alt=\"\" />\r\n                <img className={classes.playerCard} src={getCardURL(this.props.characterIndex + NUMBER_OF_PLAYER_CARDS)} alt=\"\" />\r\n                {this.getControls()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getControls = (): JSX.Element | null => {\r\n        if (store.getState().uid === this.props.uid) {\r\n            return (\r\n                <div>\r\n                    <Button clicked={Network.prevCharacter}>Prev</Button>\r\n                    <Button clicked={Network.nextCharacter}>Next</Button>\r\n                </div>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\cards.ts",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\screens\\game\\gameScreen.tsx",["65"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dice from '../../components/dice/dice';\r\nimport { IState, store } from '../../utils/redux';\r\n\r\nimport classes from './gameScreen.module.css';\r\n\r\nclass GameScreen extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className={classes.container}>\r\n\r\n                <div className={classes.dice}>\r\n                    <Dice />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n\treturn {\r\n\r\n\t};\r\n}\r\nexport default connect(mapStateToProps)(GameScreen);\r\n","C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\components\\dice\\dice.tsx",[],"C:\\Users\\lars1\\Desktop\\GitProsjekter\\BOI4Souls\\client\\src\\utils\\audioManager.ts",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":20,"column":5,"nodeType":"76","messageId":"77","endLine":22,"endColumn":6},{"ruleId":"78","severity":1,"message":"79","line":33,"column":93,"nodeType":"80","messageId":"81","endLine":33,"endColumn":95},{"ruleId":"74","severity":1,"message":"75","line":21,"column":5,"nodeType":"76","messageId":"77","endLine":23,"endColumn":6},{"ruleId":"70","severity":1,"message":"82","line":4,"column":18,"nodeType":"72","messageId":"73","endLine":4,"endColumn":23},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'stat' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'store' is defined but never used.","no-global-assign","no-unsafe-negation"]